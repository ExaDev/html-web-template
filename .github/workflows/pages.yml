name: Deploy and Cleanup GitHub Pages Environments

on:
  push:
  pull_request:
    types:
      - opened
      - reopened
      - closed
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  configure:
    if: github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    permissions:
      pages: read
    steps:
      - name: Check secrets
        id: check_secrets
        run: |
          echo "GH_APP_ID_EXISTS=${{ secrets.GH_APP_ID && 'true' || 'false' }}" >> $GITHUB_OUTPUT
          echo "GH_APP_PRIVATE_KEY_EXISTS=${{ secrets.GH_APP_PRIVATE_KEY && 'true' || 'false' }}" >> $GITHUB_OUTPUT
          echo "GH_APP_EXISTS=${{ secrets.GH_APP_ID && secrets.GH_APP_PRIVATE_KEY && 'true' || 'false' }}" >> $GITHUB_OUTPUT

      - name: Generate a token
        if: steps.check_secrets.outputs.GH_APP_EXISTS == 'true'
        continue-on-error: true
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: |
            ${{ github.event.repository.name }}

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        with:
          enablement: ${{ steps.generate_token.outputs.token && 'true' || 'false' }}
          token: ${{ steps.generate_token.outputs.token || github.token }}

    outputs:
      base_url: ${{ steps.pages.outputs.base_url }}
      origin: ${{ steps.pages.outputs.origin }}
      host: ${{ steps.pages.outputs.host }}
      base_path: ${{ steps.pages.outputs.base_path }}

  build:
    if: github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    needs:
      - configure
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build project for vanilla HTML site
        run: |
          echo "No build process needed for vanilla HTML site"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: . # Assuming all the HTML, CSS, and JS files are in the root directory

  deploy:
    if: github.event.pull_request.merged != true
    needs:
      - configure
      - build
    permissions:
      pages: write
      id-token: write
      contents: write
    environment:
      url: ${{ needs.configure.outputs.base_url }}/${{ github.ref_name != 'main' && format('ref/{0}', github.ref_name) }}
      name: ${{ github.ref_name == 'main' && 'production' || github.ref_name }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout pages branch
        uses: actions/checkout@v4
        with:
          sparse-checkout: |

      - name: Prepare pages branch
        run: |
          git fetch origin
          git checkout gh-pages || git checkout --orphan gh-pages
          git reset --hard
          git status

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: site

      - name: Move artifact to root folder for main branch
        if: github.ref_name == 'main'
        run: |
          mv site/* .

      - name: Move artifact to ref folder for non-main branches
        if: github.ref_name != 'main'
        run: |
          mkdir -p ref/${{ github.ref_name }}
          mv site/* ref/${{ github.ref_name }}

      - run: ls -alRh

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Stage changes for main branch
        if: github.ref_name == 'main'
        run: |
          git add .

      - name: Stage changes for other branches
        if: github.ref_name != 'main'
        run: |
          git add ref/${{ github.ref_name }}

      - name: Commit changes
        run: |
          git commit -m "Deploy ${{ github.ref_name }} to GitHub Pages"

      - name: Push changes
        run: |
          git push --set-upstream origin gh-pages

  cleanup:
    if: github.event.action == 'closed' && github.event.pull_request.merged != true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pages branch
        uses: actions/checkout@v4

      - name: Remove ref folder for the closed PR
        run: |
          git fetch origin
          git checkout gh-pages
          git rm -r ref/${{ github.event.pull_request.head.ref }} || echo "Branch already cleaned up"
          git commit -m "Cleanup environment for closed PR ${{ github.event.pull_request.head.ref }}"
          git push origin gh-pages
